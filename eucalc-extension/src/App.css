:root {
  --black: #2d2d2d;
  --gray: #d2d2d2;
  --lightgray: #f1f1f1;
  --white: #ffffff;
  --blue: #4285f4;
  --green: #0f9d58;
  --yellow: #f4b400;
  --red: #db4437;
  --gray-hover: #bebebe;
  --lightgray-hover: #dad8d8;
  --blue-hover: #3a76d6;
  --green-hover: #0d8d4f;
  --yellow-hover: #d39b00;
  --red-hover: #bd3c30;
}
html,
body {
  font-family: "Robot", sans-serif;
  font-size: 12px;
  margin: 0;
  padding: 0;
  min-width: 375px;
}
#title {
  font-size: 18px;
  font-weight: 700;
  color: var(--black);
}
#version {
  font-weight: 500;
}
#display,
select {
  font-family: "Robot", sans-serif;
  font-size: 22px;
  width: 100%;
  padding: 8px 20px;
  margin: 0;
  display: inline-block;
  border: 2px solid #ccc;
  border-radius: 4px;
  box-sizing: border-box;
  text-align: right;
}
#btn-yellow {
  color: var(--white);
  background-color: var(--yellow);
  font-weight: 600;
}
#btn-yellow:hover {
  color: var(--white);
  background-color: var(--yellow-hover);
}
#btn-red {
  color: var(--white);
  background-color: var(--red);
  font-weight: 600;
}
#btn-red:hover {
  color: var(--white);
  background-color: var(--red-hover);
}
#btn-gray {
  color: var(--black);
  background-color: var(--gray);
  font-weight: 600;
}
#btn-gray:hover {
  color: var(--black);
  background-color: var(--gray-hover);
}
#btn-green {
  color: var(--white);
  background-color: var(--green);
  font-weight: 600;
}
#btn-green:hover {
  color: var(--white);
  background-color: var(--green-hover);
}
#btn-lightgray {
  color: var(--black);
  background-color: var(--lightgray);
  font-weight: 600;
}
#btn-lightgray:hover {
  color: var(--black);
  background-color: var(--lightgray-hover);
}
#btn-blue {
  color: var(--white);
  background-color: var(--blue);
  font-weight: 700;
}
#btn-blue:hover {
  color: var(--white);
  background-color: var(--blue-hover);
}
#btn-GCD {
  color: var(--blue);
  background-color: var(--black);
  font-weight: 700;
}
#btn-FME {
  color: var(--red);
  background-color: var(--black);
  font-weight: 700;
}
#btn-BIN {
  color: var(--yellow);
  background-color: var(--black);
  font-weight: 700;
}
#btn-HEX {
  color: var(--green);
  background-color: var(--black);
  font-weight: 700;
}
#btn-GCD:hover {
  color: var(--white);
  background-color: var(--blue);
}
#btn-HEX:hover {
  color: var(--white);
  background-color: var(--green);
}
#btn-BIN:hover {
  color: var(--white);
  background-color: var(--yellow);
}
#btn-FME:hover {
  color: var(--white);
  background-color: var(--red);
}
.btn:focus,
.btn:active {
  outline: none !important;
  box-shadow: none;
}
hr {
  display: block;
  margin: 0;
  border-style: inset;
  border: 1px solid #ccc;
  border-radius: 4px;
  box-sizing: border-box;
}

/*
<Row className="justify-content-center align-items-center mb-1" id="one">
        {inputs[1].map((input) => (
          <Operators
            operator={input.operator}
            color={input.color}
            key={input.toString()}
          />
        ))}
      </Row>
      <Row className="justify-content-center align-items-center mb-1" id="two">
        {inputs[2].map((input) => (
          <Operators
            operator={input.operator}
            color={input.color}
            key={input.toString()}
          />
        ))}
      </Row>
      <Row
        className="justify-content-center align-items-center mb-1"
        id="three"
      >
        {inputs[3].map((input) => (
          <Operators
            operator={input.operator}
            color={input.color}
            key={input.toString()}
          />
        ))}
      </Row>
      <Row className="justify-content-center align-items-center mb-1" id="four">
        {inputs[4].map((input) => (
          <Operators
            operator={input.operator}
            color={input.color}
            key={input.toString()}
          />
        ))}
      </Row>
      <hr className="my-3"></hr>
      <Row className="justify-content-center align-items-center mb-1" id="five">
        {inputs[5].map((input) => (
          <Operators
            operator={input.operator}
            color={input.color}
            key={input.toString()}
          />
        ))}
      </Row>
      <Row className="justify-content-center align-items-center mb-1" id="six">
        {inputs[6].map((input) => (
          <Operators
            operator={input.operator}
            color={input.color}
            key={input.toString()}
          />
        ))}
      </Row>
*/
